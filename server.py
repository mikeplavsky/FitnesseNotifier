import cherrypyfrom cherrypy import exposeimport os def retry(func, num = 5):	while (num > 0):				try:				func()				  			break					except IOError: 							num -= 1			def touch(path,mode, func):		file = open(path,mode)	func(file)	file.close()	def makeTestResult(test,fileName,callback):		path = os.path.join(os.getcwd(), 'FitNesseRoot','files', 'testResults',test)	import shutil	try:		shutil.rmtree( path )	except OSError,e:		cherrypy.log(e.message)		os.mkdir( path )	touch(os.path.join(path,fileName),'w', lambda f: f.write( 'Test'))	return callback + "('done!')";class Root:		files = os.path.join( 'FitNesseRoot', 'files' )	testProgressPath = os.path.join( files, 'testProgress' )	testResults = os.path.join( files, 'testResults' )		@expose	def greenTest(self,test,callback):		return makeTestResult(test, '20110109175053_2_0_0_0', callback)			@expose	def redTest(self,test,callback):		return makeTestResult(test, '20110109175053_2_1_0_0', callback)			@expose	def startTests(self,tests,callback):			def start():				def startTest(name): 					path = os.path.join( self.testProgressPath, name )				touch(path, 'w',lambda f: f.write('Hello, Fitnesse!'))				touch(path, 'r',lambda f: f.read())							[startTest(x) for x in tests.split( ';' )];					retry( start )				return callback + "('done!')";				@expose	def stopAllTests(self,callback):			def stop():			[os.remove(os.path.join(self.testProgressPath,x)) for x in os.listdir( self.testProgressPath )]			   				retry( stop )				return callback + "('done!')";				@expose	def stopTests(self,tests,callback):			def stop():				def stopTest(test):								import os				os.remove( os.path.join(self.testProgressPath, test))							[stopTest(x) for x in tests.split(';')]					retry( stop )				return callback + "('done!')";	   			app = cherrypy.quickstart( Root(), config = "config.txt" )